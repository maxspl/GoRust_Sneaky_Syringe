{"message":"unused imports: `arch::asm`, `ffi::c_void`, `ptr::null_mut`, `size_of`, `slice::from_raw_parts`, `transmute`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":38,"byte_end":49,"line_start":4,"line_end":4,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"use core::{ffi::c_void, ptr::null_mut, slice::from_raw_parts, mem::{transmute, size_of}, arch::asm};","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":51,"byte_end":64,"line_start":4,"line_end":4,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"use core::{ffi::c_void, ptr::null_mut, slice::from_raw_parts, mem::{transmute, size_of}, arch::asm};","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":66,"byte_end":87,"line_start":4,"line_end":4,"column_start":40,"column_end":61,"is_primary":true,"text":[{"text":"use core::{ffi::c_void, ptr::null_mut, slice::from_raw_parts, mem::{transmute, size_of}, arch::asm};","highlight_start":40,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":95,"byte_end":104,"line_start":4,"line_end":4,"column_start":69,"column_end":78,"is_primary":true,"text":[{"text":"use core::{ffi::c_void, ptr::null_mut, slice::from_raw_parts, mem::{transmute, size_of}, arch::asm};","highlight_start":69,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":106,"byte_end":113,"line_start":4,"line_end":4,"column_start":80,"column_end":87,"is_primary":true,"text":[{"text":"use core::{ffi::c_void, ptr::null_mut, slice::from_raw_parts, mem::{transmute, size_of}, arch::asm};","highlight_start":80,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":116,"byte_end":125,"line_start":4,"line_end":4,"column_start":90,"column_end":99,"is_primary":true,"text":[{"text":"use core::{ffi::c_void, ptr::null_mut, slice::from_raw_parts, mem::{transmute, size_of}, arch::asm};","highlight_start":90,"highlight_end":99}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":27,"byte_end":127,"line_start":4,"line_end":4,"column_start":1,"column_end":101,"is_primary":true,"text":[{"text":"use core::{ffi::c_void, ptr::null_mut, slice::from_raw_parts, mem::{transmute, size_of}, arch::asm};","highlight_start":1,"highlight_end":101}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `arch::asm`, `ffi::c_void`, `ptr::null_mut`, `size_of`, `slice::from_raw_parts`, `transmute`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:4:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse core::{ffi::c_void, ptr::null_mut, slice::from_raw_parts, mem::{transmute, size_of}, arch::asm};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused imports: `IMAGE_NT_HEADERS32`, `IMAGE_ORDINAL_FLAG32`, `IMAGE_RELOCATION`, `WindowsProgramming::IMAGE_THUNK_DATA32`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":426,"byte_end":444,"line_start":9,"line_end":9,"column_start":37,"column_end":55,"is_primary":true,"text":[{"text":"                IMAGE_NT_HEADERS64, IMAGE_NT_HEADERS32,","highlight_start":37,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\loader.rs","byte_start":992,"byte_end":1012,"line_start":18,"line_end":18,"column_start":179,"column_end":199,"is_primary":true,"text":[{"text":"                DLL_PROCESS_ATTACH, IMAGE_EXPORT_DIRECTORY, IMAGE_BASE_RELOCATION, IMAGE_REL_BASED_HIGHLOW, IMAGE_REL_BASED_DIR64, IMAGE_IMPORT_DESCRIPTOR, IMAGE_ORDINAL_FLAG64, IMAGE_ORDINAL_FLAG32, IMAGE_IMPORT_BY_NAME, IMAGE_RELOCATION,","highlight_start":179,"highlight_end":199}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\loader.rs","byte_start":1036,"byte_end":1052,"line_start":18,"line_end":18,"column_start":223,"column_end":239,"is_primary":true,"text":[{"text":"                DLL_PROCESS_ATTACH, IMAGE_EXPORT_DIRECTORY, IMAGE_BASE_RELOCATION, IMAGE_REL_BASED_HIGHLOW, IMAGE_REL_BASED_DIR64, IMAGE_IMPORT_DESCRIPTOR, IMAGE_ORDINAL_FLAG64, IMAGE_ORDINAL_FLAG32, IMAGE_IMPORT_BY_NAME, IMAGE_RELOCATION,","highlight_start":223,"highlight_end":239}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\loader.rs","byte_start":1109,"byte_end":1147,"line_start":19,"line_end":19,"column_start":55,"column_end":93,"is_primary":true,"text":[{"text":"            }, WindowsProgramming::IMAGE_THUNK_DATA64,WindowsProgramming::IMAGE_THUNK_DATA32,","highlight_start":55,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":424,"byte_end":444,"line_start":9,"line_end":9,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"                IMAGE_NT_HEADERS64, IMAGE_NT_HEADERS32,","highlight_start":35,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\loader.rs","byte_start":990,"byte_end":1012,"line_start":18,"line_end":18,"column_start":177,"column_end":199,"is_primary":true,"text":[{"text":"                DLL_PROCESS_ATTACH, IMAGE_EXPORT_DIRECTORY, IMAGE_BASE_RELOCATION, IMAGE_REL_BASED_HIGHLOW, IMAGE_REL_BASED_DIR64, IMAGE_IMPORT_DESCRIPTOR, IMAGE_ORDINAL_FLAG64, IMAGE_ORDINAL_FLAG32, IMAGE_IMPORT_BY_NAME, IMAGE_RELOCATION,","highlight_start":177,"highlight_end":199}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\loader.rs","byte_start":1034,"byte_end":1052,"line_start":18,"line_end":18,"column_start":221,"column_end":239,"is_primary":true,"text":[{"text":"                DLL_PROCESS_ATTACH, IMAGE_EXPORT_DIRECTORY, IMAGE_BASE_RELOCATION, IMAGE_REL_BASED_HIGHLOW, IMAGE_REL_BASED_DIR64, IMAGE_IMPORT_DESCRIPTOR, IMAGE_ORDINAL_FLAG64, IMAGE_ORDINAL_FLAG32, IMAGE_IMPORT_BY_NAME, IMAGE_RELOCATION,","highlight_start":221,"highlight_end":239}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\loader.rs","byte_start":1108,"byte_end":1147,"line_start":19,"line_end":19,"column_start":54,"column_end":93,"is_primary":true,"text":[{"text":"            }, WindowsProgramming::IMAGE_THUNK_DATA64,WindowsProgramming::IMAGE_THUNK_DATA32,","highlight_start":54,"highlight_end":93}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `IMAGE_NT_HEADERS32`, `IMAGE_ORDINAL_FLAG32`, `IMAGE_RELOCATION`, `WindowsProgramming::IMAGE_THUNK_DATA32`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:9:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m4, IMAGE_NT_HEADERS32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mH, IMAGE_EXPORT_DIRECTORY, IMAGE_BASE_RELOCATION, IMAGE_REL_BASED_HIGHLOW, IMAGE_REL_BASED_DIR64, IMAGE_IMPORT_DESCRIPTOR, IMAGE_ORDINAL_FLAG64, IMAGE_ORDINAL_FLAG32, IMAGE_IMPORT_BY_NAME, IMAGE_RELOCATI\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                                                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m::IMAGE_THUNK_DATA64,WindowsProgramming::IMAGE_THUNK_DATA32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unnecessary trailing semicolon","code":{"code":"redundant_semicolons","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":20938,"byte_end":20939,"line_start":403,"line_end":403,"column_start":153,"column_end":154,"is_primary":true,"text":[{"text":"    let import_dir_addr: usize =  &(*loaded_module_NT_Headers).OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_IMPORT as usize] as *const _ as usize;;","highlight_start":153,"highlight_end":154}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(redundant_semicolons)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this semicolon","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":20938,"byte_end":20939,"line_start":403,"line_end":403,"column_start":153,"column_end":154,"is_primary":true,"text":[{"text":"    let import_dir_addr: usize =  &(*loaded_module_NT_Headers).OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_IMPORT as usize] as *const _ as usize;;","highlight_start":153,"highlight_end":154}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unnecessary trailing semicolon\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:403:153\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let import_dir_addr: usize =  &(*loaded_module_NT_Headers).OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_IMPORT as usize] as *const _ as usize;;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: remove this semicolon\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(redundant_semicolons)]` on by default\u001b[0m\n\n"}
{"message":"unnecessary parentheses around assigned value","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":27221,"byte_end":27222,"line_start":511,"line_end":511,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    let base_address_delta = (new_base_address  as isize - (*loaded_module_NT_Headers).OptionalHeader.ImageBase as isize);","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\loader.rs","byte_start":27312,"byte_end":27313,"line_start":511,"line_end":511,"column_start":121,"column_end":122,"is_primary":true,"text":[{"text":"    let base_address_delta = (new_base_address  as isize - (*loaded_module_NT_Headers).OptionalHeader.ImageBase as isize);","highlight_start":121,"highlight_end":122}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":27221,"byte_end":27222,"line_start":511,"line_end":511,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"    let base_address_delta = (new_base_address  as isize - (*loaded_module_NT_Headers).OptionalHeader.ImageBase as isize);","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\loader.rs","byte_start":27312,"byte_end":27313,"line_start":511,"line_end":511,"column_start":121,"column_end":122,"is_primary":true,"text":[{"text":"    let base_address_delta = (new_base_address  as isize - (*loaded_module_NT_Headers).OptionalHeader.ImageBase as isize);","highlight_start":121,"highlight_end":122}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unnecessary parentheses around assigned value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:511:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m511\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let base_address_delta = (new_base_address  as isize - (*loaded_module_NT_Headers).OptionalHeader.ImageBase as isize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m                                                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m511\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    let base_address_delta = \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mnew_base_address  as isize - (*loaded_module_NT_Headers).OptionalHeader.ImageBase as isize\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m511\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    let base_address_delta = new_base_address  as isize - (*loaded_module_NT_Headers).OptionalHeader.ImageBase as isize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"message":"unnecessary parentheses around `while` condition","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":28280,"byte_end":28281,"line_start":528,"line_end":528,"column_start":15,"column_end":16,"is_primary":true,"text":[{"text":"        while (first_entry_IMAGE_BASE_RELOC_size_block != 0) {","highlight_start":15,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\loader.rs","byte_start":28325,"byte_end":28326,"line_start":528,"line_end":528,"column_start":60,"column_end":61,"is_primary":true,"text":[{"text":"        while (first_entry_IMAGE_BASE_RELOC_size_block != 0) {","highlight_start":60,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":28280,"byte_end":28281,"line_start":528,"line_end":528,"column_start":15,"column_end":16,"is_primary":true,"text":[{"text":"        while (first_entry_IMAGE_BASE_RELOC_size_block != 0) {","highlight_start":15,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\loader.rs","byte_start":28325,"byte_end":28326,"line_start":528,"line_end":528,"column_start":60,"column_end":61,"is_primary":true,"text":[{"text":"        while (first_entry_IMAGE_BASE_RELOC_size_block != 0) {","highlight_start":60,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unnecessary parentheses around `while` condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:528:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m528\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        while (first_entry_IMAGE_BASE_RELOC_size_block != 0) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m528\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        while \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mfirst_entry_IMAGE_BASE_RELOC_size_block != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m528\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        while first_entry_IMAGE_BASE_RELOC_size_block != 0 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"message":"unused variable: `exit`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3004,"byte_end":3008,"line_start":83,"line_end":83,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut exit=false;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3004,"byte_end":3008,"line_start":83,"line_end":83,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut exit=false;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"_exit","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `exit`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:83:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut exit=false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_exit`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `VIRTUAL_PROTECT_HASH`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3812,"byte_end":3832,"line_start":108,"line_end":108,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let VIRTUAL_PROTECT_HASH: u32 = 0xe857500d;","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3812,"byte_end":3832,"line_start":108,"line_end":108,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let VIRTUAL_PROTECT_HASH: u32 = 0xe857500d;","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"_VIRTUAL_PROTECT_HASH","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `VIRTUAL_PROTECT_HASH`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:108:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let VIRTUAL_PROTECT_HASH: u32 = 0xe857500d;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_VIRTUAL_PROTECT_HASH`\u001b[0m\n\n"}
{"message":"unused variable: `VIRTUAL_FREE_HASH`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3918,"byte_end":3935,"line_start":110,"line_end":110,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"    let VIRTUAL_FREE_HASH: u32 = 0xe144a60e;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3918,"byte_end":3935,"line_start":110,"line_end":110,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"    let VIRTUAL_FREE_HASH: u32 = 0xe144a60e;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"_VIRTUAL_FREE_HASH","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `VIRTUAL_FREE_HASH`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:110:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let VIRTUAL_FREE_HASH: u32 = 0xe144a60e;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_VIRTUAL_FREE_HASH`\u001b[0m\n\n"}
{"message":"unused variable: `EXIT_THREAD_HASH`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3964,"byte_end":3980,"line_start":111,"line_end":111,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let EXIT_THREAD_HASH: u32 = 0xc165d757;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3964,"byte_end":3980,"line_start":111,"line_end":111,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let EXIT_THREAD_HASH: u32 = 0xc165d757;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"_EXIT_THREAD_HASH","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `EXIT_THREAD_HASH`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:111:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let EXIT_THREAD_HASH: u32 = 0xc165d757;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_EXIT_THREAD_HASH`\u001b[0m\n\n"}
{"message":"unused variable: `var1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":5130,"byte_end":5134,"line_start":130,"line_end":130,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let var1 = 2;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":5130,"byte_end":5134,"line_start":130,"line_end":130,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let var1 = 2;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"_var1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `var1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:130:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let var1 = 2;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_var1`\u001b[0m\n\n"}
{"message":"unused variable: `var2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":5149,"byte_end":5153,"line_start":131,"line_end":131,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let var2 = 3;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":5149,"byte_end":5153,"line_start":131,"line_end":131,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let var2 = 3;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"_var2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `var2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:131:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let var2 = 3;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_var2`\u001b[0m\n\n"}
{"message":"unused variable: `e_magic`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":5323,"byte_end":5330,"line_start":135,"line_end":135,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let e_magic = (*dos_header).e_magic;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":5323,"byte_end":5330,"line_start":135,"line_end":135,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let e_magic = (*dos_header).e_magic;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_e_magic","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `e_magic`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:135:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let e_magic = (*dos_header).e_magic;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_e_magic`\u001b[0m\n\n"}
{"message":"unused variable: `module_image_data_directory2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":7477,"byte_end":7505,"line_start":171,"line_end":171,"column_start":17,"column_end":45,"is_primary":true,"text":[{"text":"            let module_image_data_directory2:  u32 =  module_export_dir.VirtualAddress as u32;","highlight_start":17,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":7477,"byte_end":7505,"line_start":171,"line_end":171,"column_start":17,"column_end":45,"is_primary":true,"text":[{"text":"            let module_image_data_directory2:  u32 =  module_export_dir.VirtualAddress as u32;","highlight_start":17,"highlight_end":45}],"label":null,"suggested_replacement":"_module_image_data_directory2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `module_image_data_directory2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:171:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let module_image_data_directory2:  u32 =  module_export_dir.VirtualAddress as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_module_image_data_directory2`\u001b[0m\n\n"}
{"message":"variable `count` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":8425,"byte_end":8430,"line_start":183,"line_end":183,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"            let mut count = 0;","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_count` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `count` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:183:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut count = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `_count` instead\u001b[0m\n\n"}
{"message":"unused variable: `module_image_data_directory2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":13205,"byte_end":13233,"line_start":264,"line_end":264,"column_start":17,"column_end":45,"is_primary":true,"text":[{"text":"            let module_image_data_directory2:  u32 =  module_export_dir.VirtualAddress as u32;","highlight_start":17,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":13205,"byte_end":13233,"line_start":264,"line_end":264,"column_start":17,"column_end":45,"is_primary":true,"text":[{"text":"            let module_image_data_directory2:  u32 =  module_export_dir.VirtualAddress as u32;","highlight_start":17,"highlight_end":45}],"label":null,"suggested_replacement":"_module_image_data_directory2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `module_image_data_directory2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:264:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let module_image_data_directory2:  u32 =  module_export_dir.VirtualAddress as u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_module_image_data_directory2`\u001b[0m\n\n"}
{"message":"variable `count` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":14154,"byte_end":14159,"line_start":276,"line_end":276,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"            let mut count = 0;","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_count` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `count` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:276:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut count = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `_count` instead\u001b[0m\n\n"}
{"message":"unused variable: `IMAGE_SECTION_HEADER_size`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":20404,"byte_end":20429,"line_start":392,"line_end":392,"column_start":7,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet IMAGE_SECTION_HEADER_size = core::mem::size_of::<IMAGE_SECTION_HEADER>(); // usually 40 bytes","highlight_start":7,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":20404,"byte_end":20429,"line_start":392,"line_end":392,"column_start":7,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet IMAGE_SECTION_HEADER_size = core::mem::size_of::<IMAGE_SECTION_HEADER>(); // usually 40 bytes","highlight_start":7,"highlight_end":32}],"label":null,"suggested_replacement":"_IMAGE_SECTION_HEADER_size","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `IMAGE_SECTION_HEADER_size`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:392:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let IMAGE_SECTION_HEADER_size = core::mem::size_of::<IMAGE_SECTION_HEADER>(); // usually 40 bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_IMAGE_SECTION_HEADER_size`\u001b[0m\n\n"}
{"message":"unused variable: `dll_name_ptr_slice`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":22091,"byte_end":22109,"line_start":423,"line_end":423,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"        let mut dll_name_ptr_slice = grab_str_from_ptr(dll_name_ptr as usize); //useless, to remove","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":22091,"byte_end":22109,"line_start":423,"line_end":423,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"        let mut dll_name_ptr_slice = grab_str_from_ptr(dll_name_ptr as usize); //useless, to remove","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":"_dll_name_ptr_slice","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dll_name_ptr_slice`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:423:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m423\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut dll_name_ptr_slice = grab_str_from_ptr(dll_name_ptr as usize); //useless, to remove\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dll_name_ptr_slice`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3000,"byte_end":3008,"line_start":83,"line_end":83,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let mut exit=false;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3000,"byte_end":3004,"line_start":83,"line_end":83,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut exit=false;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:83:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut exit=false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":5510,"byte_end":5525,"line_start":139,"line_end":139,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    let mut module_list: *mut ntapi::ntldr::LDR_DATA_TABLE_ENTRY = (*pLdr).InLoadOrderModuleList.Flink as *mut LDR_DATA_TABLE_ENTRY;// get the first entry of the InMemoryOrder module list","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":5510,"byte_end":5514,"line_start":139,"line_end":139,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut module_list: *mut ntapi::ntldr::LDR_DATA_TABLE_ENTRY = (*pLdr).InLoadOrderModuleList.Flink as *mut LDR_DATA_TABLE_ENTRY;// get the first entry of the InMemoryOrder module list","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:139:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut module_list: *mut ntapi::ntldr::LDR_DATA_TABLE_ENTRY = (*pLdr).InLoadOrderModuleList.Flink as *mut LDR_DATA_TABLE_ENTRY;// get the first entry of the InMemory\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":8920,"byte_end":8943,"line_start":192,"line_end":192,"column_start":21,"column_end":44,"is_primary":true,"text":[{"text":"                let mut function_name_slice = grab_str_from_ptr(function_name_ptr);","highlight_start":21,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":8920,"byte_end":8924,"line_start":192,"line_end":192,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut function_name_slice = grab_str_from_ptr(function_name_ptr);","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:192:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut function_name_slice = grab_str_from_ptr(function_name_ptr);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":14631,"byte_end":14654,"line_start":284,"line_end":284,"column_start":21,"column_end":44,"is_primary":true,"text":[{"text":"                let mut function_name_slice = grab_str_from_ptr(function_name_ptr);","highlight_start":21,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":14631,"byte_end":14635,"line_start":284,"line_end":284,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut function_name_slice = grab_str_from_ptr(function_name_ptr);","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:284:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut function_name_slice = grab_str_from_ptr(function_name_ptr);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":18008,"byte_end":18028,"line_start":344,"line_end":344,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let mut new_base_address = VirtualAlloc(null_mut(), (*loaded_module_NT_Headers).OptionalHeader.SizeOfImage as usize, MEM_RESERVE|MEM_COMMIT, PAGE_EXECUTE_READWRITE );","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":18008,"byte_end":18012,"line_start":344,"line_end":344,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut new_base_address = VirtualAlloc(null_mut(), (*loaded_module_NT_Headers).OptionalHeader.SizeOfImage as usize, MEM_RESERVE|MEM_COMMIT, PAGE_EXECUTE_READWRITE );","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:344:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut new_base_address = VirtualAlloc(null_mut(), (*loaded_module_NT_Headers).OptionalHeader.SizeOfImage as usize, MEM_RESERVE|MEM_COMMIT, PAGE_EXECUTE_READWRITE );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":19442,"byte_end":19461,"line_start":371,"line_end":371,"column_start":13,"column_end":32,"is_primary":true,"text":[{"text":"        let mut section_headers: *mut IMAGE_SECTION_HEADER = first_section as *mut IMAGE_SECTION_HEADER; ","highlight_start":13,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":19442,"byte_end":19446,"line_start":371,"line_end":371,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut section_headers: *mut IMAGE_SECTION_HEADER = first_section as *mut IMAGE_SECTION_HEADER; ","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:371:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut section_headers: *mut IMAGE_SECTION_HEADER = first_section as *mut IMAGE_SECTION_HEADER; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":19549,"byte_end":19564,"line_start":372,"line_end":372,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"        let mut section_RVA = (*section_headers).VirtualAddress;","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":19549,"byte_end":19553,"line_start":372,"line_end":372,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut section_RVA = (*section_headers).VirtualAddress;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:372:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut section_RVA = (*section_headers).VirtualAddress;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":21973,"byte_end":21989,"line_start":421,"line_end":421,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"        let mut dll_name_ptr = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).Name as usize);","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":21973,"byte_end":21977,"line_start":421,"line_end":421,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut dll_name_ptr = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).Name as usize);","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:421:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut dll_name_ptr = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).Name as usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":22087,"byte_end":22109,"line_start":423,"line_end":423,"column_start":13,"column_end":35,"is_primary":true,"text":[{"text":"        let mut dll_name_ptr_slice = grab_str_from_ptr(dll_name_ptr as usize); //useless, to remove","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":22087,"byte_end":22091,"line_start":423,"line_end":423,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut dll_name_ptr_slice = grab_str_from_ptr(dll_name_ptr as usize); //useless, to remove","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:423:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m423\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut dll_name_ptr_slice = grab_str_from_ptr(dll_name_ptr as usize); //useless, to remove\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":22349,"byte_end":22371,"line_start":429,"line_end":429,"column_start":13,"column_end":35,"is_primary":true,"text":[{"text":"        let mut OriginalFirstThunk = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).Anonymous.OriginalFirstThunk as usize) as *mut usize;","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":22349,"byte_end":22353,"line_start":429,"line_end":429,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut OriginalFirstThunk = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).Anonymous.OriginalFirstThunk as usize) as *mut usize;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:429:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut OriginalFirstThunk = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).Anonymous.OriginalFirstThunk as usize) as *mut usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":23307,"byte_end":23325,"line_start":443,"line_end":443,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"            let mut imagethunkdata : *mut IMAGE_THUNK_DATA64 = OriginalFirstThunk as * mut IMAGE_THUNK_DATA64; //64bits_spec - line add","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":23307,"byte_end":23311,"line_start":443,"line_end":443,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut imagethunkdata : *mut IMAGE_THUNK_DATA64 = OriginalFirstThunk as * mut IMAGE_THUNK_DATA64; //64bits_spec - line add","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:443:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut imagethunkdata : *mut IMAGE_THUNK_DATA64 = OriginalFirstThunk as * mut IMAGE_THUNK_DATA64; //64bits_spec - line add\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":23958,"byte_end":23980,"line_start":454,"line_end":454,"column_start":21,"column_end":43,"is_primary":true,"text":[{"text":"                let mut NT_Headers_address = loaded_module_base as usize + (*loaded_module_DOS_Headers).e_lfanew as usize;","highlight_start":21,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":23958,"byte_end":23962,"line_start":454,"line_end":454,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut NT_Headers_address = loaded_module_base as usize + (*loaded_module_DOS_Headers).e_lfanew as usize;","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:454:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut NT_Headers_address = loaded_module_base as usize + (*loaded_module_DOS_Headers).e_lfanew as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":24420,"byte_end":24441,"line_start":461,"line_end":461,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                let mut module_nt_headers: *mut IMAGE_NT_HEADERS64 = NT_Headers_address as *mut IMAGE_NT_HEADERS64; //64bits_spec - line add","highlight_start":21,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":24420,"byte_end":24424,"line_start":461,"line_end":461,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut module_nt_headers: *mut IMAGE_NT_HEADERS64 = NT_Headers_address as *mut IMAGE_NT_HEADERS64; //64bits_spec - line add","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:461:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut module_nt_headers: *mut IMAGE_NT_HEADERS64 = NT_Headers_address as *mut IMAGE_NT_HEADERS64; //64bits_spec - line add\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":24564,"byte_end":24588,"line_start":463,"line_end":463,"column_start":21,"column_end":45,"is_primary":true,"text":[{"text":"                let mut export_dir_entry_ptr =  (*module_nt_headers).OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_EXPORT as usize];","highlight_start":21,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":24564,"byte_end":24568,"line_start":463,"line_end":463,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut export_dir_entry_ptr =  (*module_nt_headers).OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_EXPORT as usize];","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:463:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m463\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut export_dir_entry_ptr =  (*module_nt_headers).OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_EXPORT as usize];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":24760,"byte_end":24778,"line_start":466,"line_end":466,"column_start":21,"column_end":39,"is_primary":true,"text":[{"text":"                let mut export_dir_ptr:  usize = loaded_module_base as  usize + export_dir_entry_ptr.VirtualAddress as usize;","highlight_start":21,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":24760,"byte_end":24764,"line_start":466,"line_end":466,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut export_dir_ptr:  usize = loaded_module_base as  usize + export_dir_entry_ptr.VirtualAddress as usize;","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:466:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m466\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut export_dir_ptr:  usize = loaded_module_base as  usize + export_dir_entry_ptr.VirtualAddress as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":25964,"byte_end":25986,"line_start":481,"line_end":481,"column_start":21,"column_end":43,"is_primary":true,"text":[{"text":"                let mut function_import_VA = (new_base_address as *mut u8).add((*(FirstThunk_ptr as *mut u32)) as usize);","highlight_start":21,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":25964,"byte_end":25968,"line_start":481,"line_end":481,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut function_import_VA = (new_base_address as *mut u8).add((*(FirstThunk_ptr as *mut u32)) as usize);","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:481:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m481\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut function_import_VA = (new_base_address as *mut u8).add((*(FirstThunk_ptr as *mut u32)) as usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":26164,"byte_end":26197,"line_start":484,"line_end":484,"column_start":21,"column_end":54,"is_primary":true,"text":[{"text":"                let mut function_image_import_by_name : *mut IMAGE_IMPORT_BY_NAME = function_import_VA as *mut IMAGE_IMPORT_BY_NAME;","highlight_start":21,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":26164,"byte_end":26168,"line_start":484,"line_end":484,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut function_image_import_by_name : *mut IMAGE_IMPORT_BY_NAME = function_import_VA as *mut IMAGE_IMPORT_BY_NAME;","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:484:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m484\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut function_image_import_by_name : *mut IMAGE_IMPORT_BY_NAME = function_import_VA as *mut IMAGE_IMPORT_BY_NAME;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":26364,"byte_end":26381,"line_start":487,"line_end":487,"column_start":21,"column_end":38,"is_primary":true,"text":[{"text":"                let mut function_name = (*function_image_import_by_name).Name.as_ptr();","highlight_start":21,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":26364,"byte_end":26368,"line_start":487,"line_end":487,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut function_name = (*function_image_import_by_name).Name.as_ptr();","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:487:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m487\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut function_name = (*function_image_import_by_name).Name.as_ptr();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":26511,"byte_end":26526,"line_start":490,"line_end":490,"column_start":21,"column_end":36,"is_primary":true,"text":[{"text":"                let mut function_VA:  usize = GetProcAddress(dll_handle, function_name).unwrap() as  _;","highlight_start":21,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":26511,"byte_end":26515,"line_start":490,"line_end":490,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut function_VA:  usize = GetProcAddress(dll_handle, function_name).unwrap() as  _;","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:490:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m490\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut function_VA:  usize = GetProcAddress(dll_handle, function_name).unwrap() as  _;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":28738,"byte_end":28756,"line_start":535,"line_end":535,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"            let mut entries_number = ((*first_entry_IMAGE_BASE_RELOC).SizeOfBlock as usize - size_of::<IMAGE_BASE_RELOCATION>()) / size_of::<u16>() ;","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":28738,"byte_end":28742,"line_start":535,"line_end":535,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut entries_number = ((*first_entry_IMAGE_BASE_RELOC).SizeOfBlock as usize - size_of::<IMAGE_BASE_RELOCATION>()) / size_of::<u16>() ;","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:535:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut entries_number = ((*first_entry_IMAGE_BASE_RELOC).SizeOfBlock as usize - size_of::<IMAGE_BASE_RELOCATION>()) / size_of::<u16>() ;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable `KERNEL32_HASH` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3587,"byte_end":3600,"line_start":103,"line_end":103,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let KERNEL32_HASH: u32 = 0x6ddb9555;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3587,"byte_end":3600,"line_start":103,"line_end":103,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let KERNEL32_HASH: u32 = 0x6ddb9555;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"kernel32_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `KERNEL32_HASH` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:103:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let KERNEL32_HASH: u32 = 0x6ddb9555;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `kernel32_hash`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `NTDLL_HASH` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3629,"byte_end":3639,"line_start":104,"line_end":104,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let NTDLL_HASH: u32 = 0x1edab0ed;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3629,"byte_end":3639,"line_start":104,"line_end":104,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let NTDLL_HASH: u32 = 0x1edab0ed;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"ntdll_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `NTDLL_HASH` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:104:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let NTDLL_HASH: u32 = 0x1edab0ed;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `ntdll_hash`\u001b[0m\n\n"}
{"message":"variable `LOAD_LIBRARY_A_HASH` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3668,"byte_end":3687,"line_start":105,"line_end":105,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let LOAD_LIBRARY_A_HASH: u32 = 0xb7072fdb;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3668,"byte_end":3687,"line_start":105,"line_end":105,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let LOAD_LIBRARY_A_HASH: u32 = 0xb7072fdb;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"load_library_a_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `LOAD_LIBRARY_A_HASH` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:105:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let LOAD_LIBRARY_A_HASH: u32 = 0xb7072fdb;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `load_library_a_hash`\u001b[0m\n\n"}
{"message":"variable `GET_PROC_ADDRESS_HASH` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3716,"byte_end":3737,"line_start":106,"line_end":106,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"    let GET_PROC_ADDRESS_HASH: u32 = 0xdecfc1bf;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3716,"byte_end":3737,"line_start":106,"line_end":106,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"    let GET_PROC_ADDRESS_HASH: u32 = 0xdecfc1bf;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":"get_proc_address_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `GET_PROC_ADDRESS_HASH` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:106:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let GET_PROC_ADDRESS_HASH: u32 = 0xdecfc1bf;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `get_proc_address_hash`\u001b[0m\n\n"}
{"message":"variable `VIRTUAL_ALLOC_HASH` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3766,"byte_end":3784,"line_start":107,"line_end":107,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"    let VIRTUAL_ALLOC_HASH: u32 = 0x97bc257;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3766,"byte_end":3784,"line_start":107,"line_end":107,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"    let VIRTUAL_ALLOC_HASH: u32 = 0x97bc257;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":"virtual_alloc_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `VIRTUAL_ALLOC_HASH` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:107:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let VIRTUAL_ALLOC_HASH: u32 = 0x97bc257;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `virtual_alloc_hash`\u001b[0m\n\n"}
{"message":"variable `VIRTUAL_PROTECT_HASH` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3812,"byte_end":3832,"line_start":108,"line_end":108,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let VIRTUAL_PROTECT_HASH: u32 = 0xe857500d;","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3812,"byte_end":3832,"line_start":108,"line_end":108,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let VIRTUAL_PROTECT_HASH: u32 = 0xe857500d;","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"virtual_protect_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `VIRTUAL_PROTECT_HASH` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:108:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let VIRTUAL_PROTECT_HASH: u32 = 0xe857500d;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `virtual_protect_hash`\u001b[0m\n\n"}
{"message":"variable `FLUSH_INSTRUCTION_CACHE_HASH` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3861,"byte_end":3889,"line_start":109,"line_end":109,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"    let FLUSH_INSTRUCTION_CACHE_HASH: u32 = 0x6269b87f;","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3861,"byte_end":3889,"line_start":109,"line_end":109,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"    let FLUSH_INSTRUCTION_CACHE_HASH: u32 = 0x6269b87f;","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":"flush_instruction_cache_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `FLUSH_INSTRUCTION_CACHE_HASH` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:109:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let FLUSH_INSTRUCTION_CACHE_HASH: u32 = 0x6269b87f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `flush_instruction_cache_hash`\u001b[0m\n\n"}
{"message":"variable `VIRTUAL_FREE_HASH` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3918,"byte_end":3935,"line_start":110,"line_end":110,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"    let VIRTUAL_FREE_HASH: u32 = 0xe144a60e;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3918,"byte_end":3935,"line_start":110,"line_end":110,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"    let VIRTUAL_FREE_HASH: u32 = 0xe144a60e;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"virtual_free_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `VIRTUAL_FREE_HASH` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:110:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let VIRTUAL_FREE_HASH: u32 = 0xe144a60e;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `virtual_free_hash`\u001b[0m\n\n"}
{"message":"variable `EXIT_THREAD_HASH` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":3964,"byte_end":3980,"line_start":111,"line_end":111,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let EXIT_THREAD_HASH: u32 = 0xc165d757;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":3964,"byte_end":3980,"line_start":111,"line_end":111,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let EXIT_THREAD_HASH: u32 = 0xc165d757;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"exit_thread_hash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `EXIT_THREAD_HASH` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:111:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let EXIT_THREAD_HASH: u32 = 0xc165d757;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `exit_thread_hash`\u001b[0m\n\n"}
{"message":"variable `LoadLibraryA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":4173,"byte_end":4185,"line_start":116,"line_end":116,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut LoadLibraryA = transmute::<_, fnLoadLibraryA>(0x00000 as  usize); //dummy assignation","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":4173,"byte_end":4185,"line_start":116,"line_end":116,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut LoadLibraryA = transmute::<_, fnLoadLibraryA>(0x00000 as  usize); //dummy assignation","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"load_library_a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `LoadLibraryA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:116:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut LoadLibraryA = transmute::<_, fnLoadLibraryA>(0x00000 as  usize); //dummy assignation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `load_library_a`\u001b[0m\n\n"}
{"message":"variable `GetProcAddress` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":4416,"byte_end":4430,"line_start":120,"line_end":120,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"    let mut GetProcAddress = transmute::<_, fnGetProcAddress>(0x00000 as  usize); //dummy assignation","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":4416,"byte_end":4430,"line_start":120,"line_end":120,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"    let mut GetProcAddress = transmute::<_, fnGetProcAddress>(0x00000 as  usize); //dummy assignation","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"get_proc_address","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `GetProcAddress` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:120:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut GetProcAddress = transmute::<_, fnGetProcAddress>(0x00000 as  usize); //dummy assignation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `get_proc_address`\u001b[0m\n\n"}
{"message":"variable `FlushInstructionCache` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":4691,"byte_end":4712,"line_start":124,"line_end":124,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"    let mut FlushInstructionCache = transmute::<_, fnFlushInstructionCache>(0x00000 as  usize); //dummy assignation","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":4691,"byte_end":4712,"line_start":124,"line_end":124,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"    let mut FlushInstructionCache = transmute::<_, fnFlushInstructionCache>(0x00000 as  usize); //dummy assignation","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":"flush_instruction_cache","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `FlushInstructionCache` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:124:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut FlushInstructionCache = transmute::<_, fnFlushInstructionCache>(0x00000 as  usize); //dummy assignation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `flush_instruction_cache`\u001b[0m\n\n"}
{"message":"variable `VirtualAlloc` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":5033,"byte_end":5045,"line_start":128,"line_end":128,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut VirtualAlloc = transmute::<_, fnVirtualAlloc>(0x00000 as  usize); //dummy assignation","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":5033,"byte_end":5045,"line_start":128,"line_end":128,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut VirtualAlloc = transmute::<_, fnVirtualAlloc>(0x00000 as  usize); //dummy assignation","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"virtual_alloc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `VirtualAlloc` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:128:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut VirtualAlloc = transmute::<_, fnVirtualAlloc>(0x00000 as  usize); //dummy assignation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `virtual_alloc`\u001b[0m\n\n"}
{"message":"variable `pLdr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":5401,"byte_end":5405,"line_start":137,"line_end":137,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let pLdr: *mut ntapi::ntpsapi::PEB_LDR_DATA = (*peb).Ldr;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":5401,"byte_end":5405,"line_start":137,"line_end":137,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let pLdr: *mut ntapi::ntpsapi::PEB_LDR_DATA = (*peb).Ldr;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"p_ldr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `pLdr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:137:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let pLdr: *mut ntapi::ntpsapi::PEB_LDR_DATA = (*peb).Ldr;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `p_ldr`\u001b[0m\n\n"}
{"message":"variable `pBuffer` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":5824,"byte_end":5831,"line_start":143,"line_end":143,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let pBuffer: *mut u16 = (*current_module_list).BaseDllName.Buffer;","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":5824,"byte_end":5831,"line_start":143,"line_end":143,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let pBuffer: *mut u16 = (*current_module_list).BaseDllName.Buffer;","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"p_buffer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `pBuffer` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:143:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let pBuffer: *mut u16 = (*current_module_list).BaseDllName.Buffer;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `p_buffer`\u001b[0m\n\n"}
{"message":"variable `module_AddressOfNames` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":7776,"byte_end":7797,"line_start":175,"line_end":175,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"            let mut module_AddressOfNames: *const usize = (module_base_address as usize + (*module_image_export_directory).AddressOfNames as usize) as *const usize;","highlight_start":21,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":7776,"byte_end":7797,"line_start":175,"line_end":175,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"            let mut module_AddressOfNames: *const usize = (module_base_address as usize + (*module_image_export_directory).AddressOfNames as usize) as *const usize;","highlight_start":21,"highlight_end":42}],"label":null,"suggested_replacement":"module_address_of_names","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `module_AddressOfNames` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:175:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut module_AddressOfNames: *const usize = (module_base_address as usize + (*module_image_export_directory).AddressOfNames as usize) as *const usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `module_address_of_names`\u001b[0m\n\n"}
{"message":"variable `module_AddressOfOrdinals` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":8014,"byte_end":8038,"line_start":178,"line_end":178,"column_start":21,"column_end":45,"is_primary":true,"text":[{"text":"            let mut module_AddressOfOrdinals: *const u16 = (module_base_address as usize + (*module_image_export_directory).AddressOfNameOrdinals as usize) as *const u16;","highlight_start":21,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":8014,"byte_end":8038,"line_start":178,"line_end":178,"column_start":21,"column_end":45,"is_primary":true,"text":[{"text":"            let mut module_AddressOfOrdinals: *const u16 = (module_base_address as usize + (*module_image_export_directory).AddressOfNameOrdinals as usize) as *const u16;","highlight_start":21,"highlight_end":45}],"label":null,"suggested_replacement":"module_address_of_ordinals","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `module_AddressOfOrdinals` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:178:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut module_AddressOfOrdinals: *const u16 = (module_base_address as usize + (*module_image_export_directory).AddressOfNameOrdinals as usize) as *const u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `module_address_of_ordinals`\u001b[0m\n\n"}
{"message":"variable `module_AddressOfNames_dereferenced` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":8565,"byte_end":8599,"line_start":186,"line_end":186,"column_start":21,"column_end":55,"is_primary":true,"text":[{"text":"                let module_AddressOfNames_dereferenced: u32 = *(module_AddressOfNames as *const u32) ;","highlight_start":21,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":8565,"byte_end":8599,"line_start":186,"line_end":186,"column_start":21,"column_end":55,"is_primary":true,"text":[{"text":"                let module_AddressOfNames_dereferenced: u32 = *(module_AddressOfNames as *const u32) ;","highlight_start":21,"highlight_end":55}],"label":null,"suggested_replacement":"module_address_of_names_dereferenced","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `module_AddressOfNames_dereferenced` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:186:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let module_AddressOfNames_dereferenced: u32 = *(module_AddressOfNames as *const u32) ;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `module_address_of_names_dereferenced`\u001b[0m\n\n"}
{"message":"variable `AddressOfFunctions` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":9404,"byte_end":9422,"line_start":200,"line_end":200,"column_start":29,"column_end":47,"is_primary":true,"text":[{"text":"                    let mut AddressOfFunctions: *const u32  = (module_base_address as usize + (*module_image_export_directory).AddressOfFunctions as usize) as *const u32;","highlight_start":29,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":9404,"byte_end":9422,"line_start":200,"line_end":200,"column_start":29,"column_end":47,"is_primary":true,"text":[{"text":"                    let mut AddressOfFunctions: *const u32  = (module_base_address as usize + (*module_image_export_directory).AddressOfFunctions as usize) as *const u32;","highlight_start":29,"highlight_end":47}],"label":null,"suggested_replacement":"address_of_functions","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `AddressOfFunctions` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:200:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let mut AddressOfFunctions: *const u32  = (module_base_address as usize + (*module_image_export_directory).AddressOfFunctions as usize) as *const u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `address_of_functions`\u001b[0m\n\n"}
{"message":"variable `AddressOfFunctions_VA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":9943,"byte_end":9964,"line_start":207,"line_end":207,"column_start":25,"column_end":46,"is_primary":true,"text":[{"text":"                    let AddressOfFunctions_VA = module_base_address  as  usize + *(AddressOfFunctions as *const u32) as usize;","highlight_start":25,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":9943,"byte_end":9964,"line_start":207,"line_end":207,"column_start":25,"column_end":46,"is_primary":true,"text":[{"text":"                    let AddressOfFunctions_VA = module_base_address  as  usize + *(AddressOfFunctions as *const u32) as usize;","highlight_start":25,"highlight_end":46}],"label":null,"suggested_replacement":"address_of_functions_va","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `AddressOfFunctions_VA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:207:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let AddressOfFunctions_VA = module_base_address  as  usize + *(AddressOfFunctions as *const u32) as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `address_of_functions_va`\u001b[0m\n\n"}
{"message":"variable `module_AddressOfNames` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":13504,"byte_end":13525,"line_start":268,"line_end":268,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"            let mut module_AddressOfNames: *const usize = (module_base_address as usize + (*module_image_export_directory).AddressOfNames as usize) as *const usize;","highlight_start":21,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":13504,"byte_end":13525,"line_start":268,"line_end":268,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"            let mut module_AddressOfNames: *const usize = (module_base_address as usize + (*module_image_export_directory).AddressOfNames as usize) as *const usize;","highlight_start":21,"highlight_end":42}],"label":null,"suggested_replacement":"module_address_of_names","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `module_AddressOfNames` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:268:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut module_AddressOfNames: *const usize = (module_base_address as usize + (*module_image_export_directory).AddressOfNames as usize) as *const usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `module_address_of_names`\u001b[0m\n\n"}
{"message":"variable `module_AddressOfOrdinals` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":13742,"byte_end":13766,"line_start":271,"line_end":271,"column_start":21,"column_end":45,"is_primary":true,"text":[{"text":"            let mut module_AddressOfOrdinals: *const u16 = (module_base_address as usize + (*module_image_export_directory).AddressOfNameOrdinals as usize) as *const u16;","highlight_start":21,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":13742,"byte_end":13766,"line_start":271,"line_end":271,"column_start":21,"column_end":45,"is_primary":true,"text":[{"text":"            let mut module_AddressOfOrdinals: *const u16 = (module_base_address as usize + (*module_image_export_directory).AddressOfNameOrdinals as usize) as *const u16;","highlight_start":21,"highlight_end":45}],"label":null,"suggested_replacement":"module_address_of_ordinals","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `module_AddressOfOrdinals` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:271:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut module_AddressOfOrdinals: *const u16 = (module_base_address as usize + (*module_image_export_directory).AddressOfNameOrdinals as usize) as *const u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `module_address_of_ordinals`\u001b[0m\n\n"}
{"message":"variable `module_AddressOfNames_dereferenced` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":14294,"byte_end":14328,"line_start":279,"line_end":279,"column_start":21,"column_end":55,"is_primary":true,"text":[{"text":"                let module_AddressOfNames_dereferenced: u32 = *(module_AddressOfNames as *const u32) ;","highlight_start":21,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":14294,"byte_end":14328,"line_start":279,"line_end":279,"column_start":21,"column_end":55,"is_primary":true,"text":[{"text":"                let module_AddressOfNames_dereferenced: u32 = *(module_AddressOfNames as *const u32) ;","highlight_start":21,"highlight_end":55}],"label":null,"suggested_replacement":"module_address_of_names_dereferenced","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `module_AddressOfNames_dereferenced` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:279:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let module_AddressOfNames_dereferenced: u32 = *(module_AddressOfNames as *const u32) ;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `module_address_of_names_dereferenced`\u001b[0m\n\n"}
{"message":"variable `AddressOfFunctions` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":15035,"byte_end":15053,"line_start":293,"line_end":293,"column_start":29,"column_end":47,"is_primary":true,"text":[{"text":"                    let mut AddressOfFunctions: *const u32  = (module_base_address as usize + (*module_image_export_directory).AddressOfFunctions as usize) as *const u32;","highlight_start":29,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":15035,"byte_end":15053,"line_start":293,"line_end":293,"column_start":29,"column_end":47,"is_primary":true,"text":[{"text":"                    let mut AddressOfFunctions: *const u32  = (module_base_address as usize + (*module_image_export_directory).AddressOfFunctions as usize) as *const u32;","highlight_start":29,"highlight_end":47}],"label":null,"suggested_replacement":"address_of_functions","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `AddressOfFunctions` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:293:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let mut AddressOfFunctions: *const u32  = (module_base_address as usize + (*module_image_export_directory).AddressOfFunctions as usize) as *const u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `address_of_functions`\u001b[0m\n\n"}
{"message":"variable `AddressOfFunctions_VA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":15574,"byte_end":15595,"line_start":300,"line_end":300,"column_start":25,"column_end":46,"is_primary":true,"text":[{"text":"                    let AddressOfFunctions_VA = module_base_address  as  usize + *(AddressOfFunctions as *const u32) as usize;","highlight_start":25,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":15574,"byte_end":15595,"line_start":300,"line_end":300,"column_start":25,"column_end":46,"is_primary":true,"text":[{"text":"                    let AddressOfFunctions_VA = module_base_address  as  usize + *(AddressOfFunctions as *const u32) as usize;","highlight_start":25,"highlight_end":46}],"label":null,"suggested_replacement":"address_of_functions_va","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `AddressOfFunctions_VA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:300:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let AddressOfFunctions_VA = module_base_address  as  usize + *(AddressOfFunctions as *const u32) as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `address_of_functions_va`\u001b[0m\n\n"}
{"message":"variable `loaded_module_DOS_Headers` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":17220,"byte_end":17245,"line_start":332,"line_end":332,"column_start":9,"column_end":34,"is_primary":true,"text":[{"text":"    let loaded_module_DOS_Headers: *mut IMAGE_DOS_HEADER = loaded_module_base as *mut IMAGE_DOS_HEADER;","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":17220,"byte_end":17245,"line_start":332,"line_end":332,"column_start":9,"column_end":34,"is_primary":true,"text":[{"text":"    let loaded_module_DOS_Headers: *mut IMAGE_DOS_HEADER = loaded_module_base as *mut IMAGE_DOS_HEADER;","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":"loaded_module_dos_headers","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `loaded_module_DOS_Headers` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:332:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let loaded_module_DOS_Headers: *mut IMAGE_DOS_HEADER = loaded_module_base as *mut IMAGE_DOS_HEADER;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `loaded_module_dos_headers`\u001b[0m\n\n"}
{"message":"variable `NT_Headers_address` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":17325,"byte_end":17343,"line_start":333,"line_end":333,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"    let NT_Headers_address = loaded_module_base as usize + (*loaded_module_DOS_Headers).e_lfanew as usize;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":17325,"byte_end":17343,"line_start":333,"line_end":333,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"    let NT_Headers_address = loaded_module_base as usize + (*loaded_module_DOS_Headers).e_lfanew as usize;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":"nt_headers_address","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `NT_Headers_address` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:333:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let NT_Headers_address = loaded_module_base as usize + (*loaded_module_DOS_Headers).e_lfanew as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `nt_headers_address`\u001b[0m\n\n"}
{"message":"variable `loaded_module_NT_Headers` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":17656,"byte_end":17680,"line_start":339,"line_end":339,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let loaded_module_NT_Headers: *mut IMAGE_NT_HEADERS64 = NT_Headers_address as *mut IMAGE_NT_HEADERS64; //64bits_spec - line add","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":17656,"byte_end":17680,"line_start":339,"line_end":339,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let loaded_module_NT_Headers: *mut IMAGE_NT_HEADERS64 = NT_Headers_address as *mut IMAGE_NT_HEADERS64; //64bits_spec - line add","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":"loaded_module_nt_headers","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `loaded_module_NT_Headers` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:339:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let loaded_module_NT_Headers: *mut IMAGE_NT_HEADERS64 = NT_Headers_address as *mut IMAGE_NT_HEADERS64; //64bits_spec - line add\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `loaded_module_nt_headers`\u001b[0m\n\n"}
{"message":"variable `section_RVA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":19553,"byte_end":19564,"line_start":372,"line_end":372,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"        let mut section_RVA = (*section_headers).VirtualAddress;","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":19553,"byte_end":19564,"line_start":372,"line_end":372,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"        let mut section_RVA = (*section_headers).VirtualAddress;","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":"section_rva","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `section_RVA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:372:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut section_RVA = (*section_headers).VirtualAddress;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `section_rva`\u001b[0m\n\n"}
{"message":"variable `new_section_VA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":19665,"byte_end":19679,"line_start":375,"line_end":375,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"        let mut new_section_VA = (new_base_address as *mut u8).add(section_RVA as usize);","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":19665,"byte_end":19679,"line_start":375,"line_end":375,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"        let mut new_section_VA = (new_base_address as *mut u8).add(section_RVA as usize);","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":"new_section_va","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `new_section_VA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:375:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut new_section_VA = (new_base_address as *mut u8).add(section_RVA as usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `new_section_va`\u001b[0m\n\n"}
{"message":"variable `IMAGE_SECTION_HEADER_size` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":20404,"byte_end":20429,"line_start":392,"line_end":392,"column_start":7,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet IMAGE_SECTION_HEADER_size = core::mem::size_of::<IMAGE_SECTION_HEADER>(); // usually 40 bytes","highlight_start":7,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":20404,"byte_end":20429,"line_start":392,"line_end":392,"column_start":7,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet IMAGE_SECTION_HEADER_size = core::mem::size_of::<IMAGE_SECTION_HEADER>(); // usually 40 bytes","highlight_start":7,"highlight_end":32}],"label":null,"suggested_replacement":"image_section_header_size","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `IMAGE_SECTION_HEADER_size` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:392:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let IMAGE_SECTION_HEADER_size = core::mem::size_of::<IMAGE_SECTION_HEADER>(); // usually 40 bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `image_section_header_size`\u001b[0m\n\n"}
{"message":"variable `first_entry_DESCRIPTOR` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":21391,"byte_end":21413,"line_start":412,"line_end":412,"column_start":13,"column_end":35,"is_primary":true,"text":[{"text":"    let mut first_entry_DESCRIPTOR : *mut IMAGE_IMPORT_DESCRIPTOR = first_entry as *mut IMAGE_IMPORT_DESCRIPTOR; ","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":21391,"byte_end":21413,"line_start":412,"line_end":412,"column_start":13,"column_end":35,"is_primary":true,"text":[{"text":"    let mut first_entry_DESCRIPTOR : *mut IMAGE_IMPORT_DESCRIPTOR = first_entry as *mut IMAGE_IMPORT_DESCRIPTOR; ","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":"first_entry_descriptor","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `first_entry_DESCRIPTOR` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:412:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut first_entry_DESCRIPTOR : *mut IMAGE_IMPORT_DESCRIPTOR = first_entry as *mut IMAGE_IMPORT_DESCRIPTOR; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `first_entry_descriptor`\u001b[0m\n\n"}
{"message":"variable `OriginalFirstThunk` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":22353,"byte_end":22371,"line_start":429,"line_end":429,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"        let mut OriginalFirstThunk = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).Anonymous.OriginalFirstThunk as usize) as *mut usize;","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":22353,"byte_end":22371,"line_start":429,"line_end":429,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"        let mut OriginalFirstThunk = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).Anonymous.OriginalFirstThunk as usize) as *mut usize;","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":"original_first_thunk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `OriginalFirstThunk` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:429:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut OriginalFirstThunk = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).Anonymous.OriginalFirstThunk as usize) as *mut usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `original_first_thunk`\u001b[0m\n\n"}
{"message":"variable `FirstThunk_ptr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":22579,"byte_end":22593,"line_start":432,"line_end":432,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"        let mut FirstThunk_ptr: *mut usize = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).FirstThunk as usize) as *mut usize;","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":22579,"byte_end":22593,"line_start":432,"line_end":432,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"        let mut FirstThunk_ptr: *mut usize = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).FirstThunk as usize) as *mut usize;","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":"first_thunk_ptr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `FirstThunk_ptr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:432:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut FirstThunk_ptr: *mut usize = (new_base_address as *mut u8).add((*first_entry_DESCRIPTOR).FirstThunk as usize) as *mut usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `first_thunk_ptr`\u001b[0m\n\n"}
{"message":"variable `IMAGE_ORDINAL_X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":23640,"byte_end":23655,"line_start":449,"line_end":449,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"            let IMAGE_ORDINAL_X = IMAGE_ORDINAL_FLAG64; //64bits_spec - line add","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":23640,"byte_end":23655,"line_start":449,"line_end":449,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"            let IMAGE_ORDINAL_X = IMAGE_ORDINAL_FLAG64; //64bits_spec - line add","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":"image_ordinal_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `IMAGE_ORDINAL_X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:449:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let IMAGE_ORDINAL_X = IMAGE_ORDINAL_FLAG64; //64bits_spec - line add\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `image_ordinal_x`\u001b[0m\n\n"}
{"message":"variable `NT_Headers_address` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":23962,"byte_end":23980,"line_start":454,"line_end":454,"column_start":25,"column_end":43,"is_primary":true,"text":[{"text":"                let mut NT_Headers_address = loaded_module_base as usize + (*loaded_module_DOS_Headers).e_lfanew as usize;","highlight_start":25,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":23962,"byte_end":23980,"line_start":454,"line_end":454,"column_start":25,"column_end":43,"is_primary":true,"text":[{"text":"                let mut NT_Headers_address = loaded_module_base as usize + (*loaded_module_DOS_Headers).e_lfanew as usize;","highlight_start":25,"highlight_end":43}],"label":null,"suggested_replacement":"nt_headers_address","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `NT_Headers_address` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:454:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut NT_Headers_address = loaded_module_base as usize + (*loaded_module_DOS_Headers).e_lfanew as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `nt_headers_address`\u001b[0m\n\n"}
{"message":"variable `function_import_VA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":25968,"byte_end":25986,"line_start":481,"line_end":481,"column_start":25,"column_end":43,"is_primary":true,"text":[{"text":"                let mut function_import_VA = (new_base_address as *mut u8).add((*(FirstThunk_ptr as *mut u32)) as usize);","highlight_start":25,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":25968,"byte_end":25986,"line_start":481,"line_end":481,"column_start":25,"column_end":43,"is_primary":true,"text":[{"text":"                let mut function_import_VA = (new_base_address as *mut u8).add((*(FirstThunk_ptr as *mut u32)) as usize);","highlight_start":25,"highlight_end":43}],"label":null,"suggested_replacement":"function_import_va","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `function_import_VA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:481:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m481\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut function_import_VA = (new_base_address as *mut u8).add((*(FirstThunk_ptr as *mut u32)) as usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `function_import_va`\u001b[0m\n\n"}
{"message":"variable `function_VA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":26515,"byte_end":26526,"line_start":490,"line_end":490,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"                let mut function_VA:  usize = GetProcAddress(dll_handle, function_name).unwrap() as  _;","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":26515,"byte_end":26526,"line_start":490,"line_end":490,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"                let mut function_VA:  usize = GetProcAddress(dll_handle, function_name).unwrap() as  _;","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":"function_va","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `function_VA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:490:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m490\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut function_VA:  usize = GetProcAddress(dll_handle, function_name).unwrap() as  _;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `function_va`\u001b[0m\n\n"}
{"message":"variable `relocation_directory_IMAGE_DATA_DIRECTORY` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":27748,"byte_end":27789,"line_start":521,"line_end":521,"column_start":13,"column_end":54,"is_primary":true,"text":[{"text":"        let relocation_directory_IMAGE_DATA_DIRECTORY : *mut IMAGE_DATA_DIRECTORY = relocation_directory_ptr as *mut IMAGE_DATA_DIRECTORY; ","highlight_start":13,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":27748,"byte_end":27789,"line_start":521,"line_end":521,"column_start":13,"column_end":54,"is_primary":true,"text":[{"text":"        let relocation_directory_IMAGE_DATA_DIRECTORY : *mut IMAGE_DATA_DIRECTORY = relocation_directory_ptr as *mut IMAGE_DATA_DIRECTORY; ","highlight_start":13,"highlight_end":54}],"label":null,"suggested_replacement":"relocation_directory_image_data_directory","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `relocation_directory_IMAGE_DATA_DIRECTORY` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:521:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let relocation_directory_IMAGE_DATA_DIRECTORY : *mut IMAGE_DATA_DIRECTORY = relocation_directory_ptr as *mut IMAGE_DATA_DIRECTORY; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `relocation_directory_image_data_directory`\u001b[0m\n\n"}
{"message":"variable `first_entry_IMAGE_BASE_RELOC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":28085,"byte_end":28113,"line_start":525,"line_end":525,"column_start":17,"column_end":45,"is_primary":true,"text":[{"text":"        let mut first_entry_IMAGE_BASE_RELOC = first_entry as *mut IMAGE_BASE_RELOCATION;","highlight_start":17,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":28085,"byte_end":28113,"line_start":525,"line_end":525,"column_start":17,"column_end":45,"is_primary":true,"text":[{"text":"        let mut first_entry_IMAGE_BASE_RELOC = first_entry as *mut IMAGE_BASE_RELOCATION;","highlight_start":17,"highlight_end":45}],"label":null,"suggested_replacement":"first_entry_image_base_reloc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `first_entry_IMAGE_BASE_RELOC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:525:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m525\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut first_entry_IMAGE_BASE_RELOC = first_entry as *mut IMAGE_BASE_RELOCATION;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `first_entry_image_base_reloc`\u001b[0m\n\n"}
{"message":"variable `first_entry_IMAGE_BASE_RELOC_size_block` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":28176,"byte_end":28215,"line_start":526,"line_end":526,"column_start":17,"column_end":56,"is_primary":true,"text":[{"text":"        let mut first_entry_IMAGE_BASE_RELOC_size_block = (*first_entry_IMAGE_BASE_RELOC).SizeOfBlock;","highlight_start":17,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":28176,"byte_end":28215,"line_start":526,"line_end":526,"column_start":17,"column_end":56,"is_primary":true,"text":[{"text":"        let mut first_entry_IMAGE_BASE_RELOC_size_block = (*first_entry_IMAGE_BASE_RELOC).SizeOfBlock;","highlight_start":17,"highlight_end":56}],"label":null,"suggested_replacement":"first_entry_image_base_reloc_size_block","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `first_entry_IMAGE_BASE_RELOC_size_block` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:526:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut first_entry_IMAGE_BASE_RELOC_size_block = (*first_entry_IMAGE_BASE_RELOC).SizeOfBlock;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `first_entry_image_base_reloc_size_block`\u001b[0m\n\n"}
{"message":"variable `relocation_block_VA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\loader.rs","byte_start":28543,"byte_end":28562,"line_start":532,"line_end":532,"column_start":17,"column_end":36,"is_primary":true,"text":[{"text":"            let relocation_block_VA = new_base_address  as usize +  (*first_entry_IMAGE_BASE_RELOC).VirtualAddress as usize;","highlight_start":17,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\loader.rs","byte_start":28543,"byte_end":28562,"line_start":532,"line_end":532,"column_start":17,"column_end":36,"is_primary":true,"text":[{"text":"            let relocation_block_VA = new_base_address  as usize +  (*first_entry_IMAGE_BASE_RELOC).VirtualAddress as usize;","highlight_start":17,"highlight_end":36}],"label":null,"suggested_replacement":"relocation_block_va","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `relocation_block_VA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\loader.rs:532:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m532\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let relocation_block_VA = new_base_address  as usize +  (*first_entry_IMAGE_BASE_RELOC).VirtualAddress as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `relocation_block_va`\u001b[0m\n\n"}
{"message":"80 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 80 warnings emitted\u001b[0m\n\n"}
